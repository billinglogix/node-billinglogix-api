var r=class extends Error{constructor(t,s){super(t),this.name=this.constructor.name,typeof s<"u"&&(this.data=s)}};r.prototype.toJSON=function(u=!1){let t=u===!0?{stack:this.stack}:{};return typeof this.data>"u"?{name:this.name,message:this.message,...t}:{name:this.name,message:this.message,data:this.data,...t}};import d from"node-fetch";import m from"jsonwebtoken";var f={version:"v1",timeout:1e4,headers:{},debug:!1},c=class{#s;#r;#o;#i;#n;#h;#a;constructor(t,s,i,e={}){let n={acccountSub:/^(?![-])[a-z0-9-]+(?<![-])$/gm,accessKey:/^[a-zA-Z0-9]+$/,secretKey:/^[a-zA-Z0-9_=\-\/]+$/};if(typeof t!="string"||!n.acccountSub.test(t))throw new r("Missing or invalid account subdomain: "+t);if(typeof s!="string"||!n.accessKey.test(s))throw new r("Missing or invalid access key: "+s);if(typeof i!="string"||!n.secretKey.test(i))throw new r("Missing or invalid secret key: "+i);if(typeof e!="object")throw new r("Invalid options object: "+e);if(e={...f,...e},typeof e.version!="string")throw new r("Invalid API version: "+e.version);if(e.version!=="v1")throw new r("Unsupported API version: "+e.version);if(typeof e.timeout!="number")throw new r("Invalid request timeout: "+e.timeout);if(e.timeout<1e3||e.timeout>6e4)throw new r("Unsupported request timeout: "+e.timeout);if(typeof e.headers!="object")throw new r("Invalid additional request headers: "+e.headers);for(let a in e.headers)if(typeof a!="string"||typeof e.headers[a]!="string")throw new r("Invalid request header value: "+e.headers[a]);this.#o=e,this.#s=s,this.#r=i,this.#i=`https://${t}.billinglogix.com/api/${e.version}`,this.#n={...e.headers,"User-Agent":"BillingLogix API Client v1.0.0","Content-Type":"application/json",Accept:"application/json"},this.#h=e.timeout,this.#a=e.debug===!0}#e(){this.#a&&console.debug(...arguments)}#t(){this.#a&&console.error(...arguments)}#u(t){if(this.#s&&this.#r)t.headers.Authorization="Bearer "+m.sign({iss:this.#s,iat:new Date().getTime(),exp:new Date().getTime()+3e4},this.#r);else throw new r("No Authentication Data");return t}request(t,s){this.#e("Request Options",t,s);let i=new Promise((e,n)=>{try{let a=this.#u({...t,headers:{...t.headers,...this.#n},timeout:t.timeout||this.#h});a.path.charAt(0)!=="/"&&(a.path=`/${a.path}`),this.#e("Fetch Options",this.#i,a),d(`${this.#i}${a.path}`,a).then(o=>{o.ok?o.json().then(h=>{this.#e("Response Success"),e(h)}).catch(h=>{this.#t("Response Parsing Error",h),n(new r("Error parsing response data",h))}):o.json().then(h=>{this.#e("Response Error",h),n(h)}).catch(h=>{this.#t("Response Failure",h),n(new r("Error parsing request failure",h))})}).catch(o=>{this.#t("Request Failure",o),n(new r("Request Failure",o))})}catch(a){this.#t("Unexpected Error",a),n(new r("Unexpected Error",a))}});if(s){i.then(e=>{this.#e("Promise","Done"),s(null,e)}).catch(e=>{this.#e("Promise","Error",result),s(e)});return}return this.#e("Promise Returned","No callback"),i}get(t,s={},i){let e={...s,path:t,method:"get"};return this.request(s,i)}post(t,s,i={},e){let n={...i,path:t,method:"post",data:s};return this.request(i,e)}put(t,s,i={},e){let n={...i,path:t,method:"put",data:s};return this.request(i,e)}delete(t,s={},i){let e={...s,path:t,method:"delete"};return this.request(s,i)}},v=c;export{c as BillingLogixClient,v as default};
/**
 * JavaScript BillingLogix API Client
 * @module billinglogix-api
 * @license MIT
 * @version 1.0.0
 * @since 1.0.0
 * @description A simple BillingLogix API client for Node.js
 * @repository https://github.com/billinglogix/node-billinglogix-api
 */
