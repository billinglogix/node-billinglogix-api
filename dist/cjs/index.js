"use strict";var g=Object.create;var c=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var q=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var A=(a,t)=>{for(var s in t)c(a,s,{get:t[s],enumerable:!0})},m=(a,t,s,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let e of v(t))!y.call(a,e)&&e!==s&&c(a,e,{get:()=>t[e],enumerable:!(r=w(t,e))||r.enumerable});return a};var f=(a,t,s)=>(s=a!=null?g(q(a)):{},m(t||!a||!a.__esModule?c(s,"default",{value:a,enumerable:!0}):s,a)),b=a=>m(c({},"__esModule",{value:!0}),a);var P={};A(P,{BillingLogixClient:()=>d,default:()=>O});module.exports=b(P);var i=class extends Error{constructor(t,s){super(t),this.name=this.constructor.name,typeof s<"u"&&(this.data=s)}};i.prototype.toJSON=function(a=!1){let t=a===!0?{stack:this.stack}:{};return typeof this.data>"u"?{name:this.name,message:this.message,...t}:{name:this.name,message:this.message,data:this.data,...t}};var l=f(require("node-fetch"),1),p=f(require("jsonwebtoken"),1);var x={version:"v1",timeout:1e4,headers:{},debug:!1},d=class{#s;#r;#o;#i;#n;#h;#a;constructor(t,s,r,e={}){let h={acccountSub:/^(?![-])[a-z0-9-]+(?<![-])$/gm,accessKey:/^[a-zA-Z0-9]+$/,secretKey:/^[a-zA-Z0-9_=\-\/]+$/};if(typeof t!="string"||!h.acccountSub.test(t))throw new i("Missing or invalid account subdomain: "+t);if(typeof s!="string"||!h.accessKey.test(s))throw new i("Missing or invalid access key: "+s);if(typeof r!="string"||!h.secretKey.test(r))throw new i("Missing or invalid secret key: "+r);if(typeof e!="object")throw new i("Invalid options object: "+e);if(e={...x,...e},typeof e.version!="string")throw new i("Invalid API version: "+e.version);if(e.version!=="v1")throw new i("Unsupported API version: "+e.version);if(typeof e.timeout!="number")throw new i("Invalid request timeout: "+e.timeout);if(e.timeout<1e3||e.timeout>6e4)throw new i("Unsupported request timeout: "+e.timeout);if(typeof e.headers!="object")throw new i("Invalid additional request headers: "+e.headers);for(let n in e.headers)if(typeof n!="string"||typeof e.headers[n]!="string")throw new i("Invalid request header value: "+e.headers[n]);this.#o=e,this.#s=s,this.#r=r,this.#i=`https://${t}.billinglogix.com/api/${e.version}`,this.#n={...e.headers,"User-Agent":"BillingLogix API Client v1.0.0","Content-Type":"application/json",Accept:"application/json"},this.#h=e.timeout,this.#a=e.debug===!0}#e(){this.#a&&console.debug(...arguments)}#t(){this.#a&&console.error(...arguments)}#u(t){if(this.#s&&this.#r)t.headers.Authorization="Bearer "+p.default.sign({iss:this.#s,iat:new Date().getTime(),exp:new Date().getTime()+3e4},this.#r);else throw new i("No Authentication Data");return t}request(t,s){this.#e("Request Options",t,s);let r=new Promise((e,h)=>{try{let n=this.#u({...t,headers:{...t.headers,...this.#n},timeout:t.timeout||this.#h});n.path.charAt(0)!=="/"&&(n.path=`/${n.path}`),this.#e("Fetch Options",this.#i,n),(0,l.default)(`${this.#i}${n.path}`,n).then(u=>{u.ok?u.json().then(o=>{this.#e("Response Success"),e(o)}).catch(o=>{this.#t("Response Parsing Error",o),h(new i("Error parsing response data",o))}):u.json().then(o=>{this.#e("Response Error",o),h(o)}).catch(o=>{this.#t("Response Failure",o),h(new i("Error parsing request failure",o))})}).catch(u=>{this.#t("Request Failure",u),h(new i("Request Failure",u))})}catch(n){this.#t("Unexpected Error",n),h(new i("Unexpected Error",n))}});if(s){r.then(e=>{this.#e("Promise","Done"),s(null,e)}).catch(e=>{this.#e("Promise","Error",result),s(e)});return}return this.#e("Promise Returned","No callback"),r}get(t,s={},r){let e={...s,path:t,method:"get"};return this.request(s,r)}post(t,s,r={},e){let h={...r,path:t,method:"post",data:s};return this.request(r,e)}put(t,s,r={},e){let h={...r,path:t,method:"put",data:s};return this.request(r,e)}delete(t,s={},r){let e={...s,path:t,method:"delete"};return this.request(s,r)}},O=d;0&&(module.exports={BillingLogixClient});
/**
 * JavaScript BillingLogix API Client
 * @module billinglogix-api
 * @license MIT
 * @version 1.0.0
 * @since 1.0.0
 * @description A simple BillingLogix API client for Node.js
 * @repository https://github.com/billinglogix/node-billinglogix-api
 */
